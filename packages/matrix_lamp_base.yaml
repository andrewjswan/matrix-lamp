substitutions:
  project_name: "ajs.Light - Matrix Lamp"
  project_version: "1.1.5"
  comment: "ESPHome Matrix Lamp"

esphome:
  libraries:
    - fastled/FastLED @ 3.6.0
  includes:
    - includes/matrix_lamp/light.h
    - includes/matrix_lamp/common.h
    - includes/matrix_lamp/constants.h
    - includes/matrix_lamp/effect_data.h
    - includes/matrix_lamp/effect_palette.h
    - includes/matrix_lamp/effects.h
    - includes/matrix_lamp/noise_effects.h
    - includes/matrix_lamp/effect_ticker.h
    - includes/matrix_lamp/utility.h
    - includes/matrix_lamp/matrix_lamp.h
  on_boot:
    priority: -100
    then:
      # - light.turn_off:
      #     id: neopixel_led
      - delay: 5s
      - logger.log:
          format: "${name} started, LED: ${type_leds}:${num_leds}:${pin_leds}, Effects: %d Reboot: ${reboot_timeout}"
          args: ['id(neopixel_led)->get_effects().size()']
          level: INFO
          tag: start

# Over The Air Update Component
ota:
  on_begin:
    then:
      - lambda: |-
          matrix_lamp.~GyverLamp();

number:
  # Matrix Orientation
  - platform: template
    name: ${name} Matrix Orientation
    icon: mdi:mdi-arrow-expand
    min_value: 1
    max_value: 8
    step: 1
    optimistic: true
    id: matrix_orientation
    initial_value: 4
    mode: slider
    entity_category: config
    disabled_by_default: true
    restore_value: true
    on_value:
      then:
        - lambda: |-
            matrix_lamp.SetMatrixOrientation(x);

  # Matrix Settings
  - platform: template
    name: ${name} Effect Speed
    icon: mdi:speedometer
    min_value: 0
    max_value: 255
    step: 1
    optimistic: true
    id: fastled_speed
    initial_value: 128
    mode: slider
    entity_category: config  

  - platform: template
    name: ${name} Effect Scale
    icon: mdi:drag-variant
    min_value: 0
    max_value: 100
    step: 1
    optimistic: true
    id: fastled_variant
    initial_value: 50
    mode: slider
    entity_category: config

switch:
  # Random Mode Settings
  - platform: template
    name: ${name} Random Mode
    icon: mdi:shuffle
    lambda: |-
      return matrix_lamp.GetRandomSettings();
    turn_on_action:
      - lambda: |-
          matrix_lamp.SetRandomSettings(true);
    turn_off_action:
      - lambda: |-
          matrix_lamp.SetRandomSettings(false);
